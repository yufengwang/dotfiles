" vim config file "

" make vim more useful!
set nocompatible

" Vundle plugin manager
filetype off
set rtp+=~/.vim/bundle/Vundle.vim

call vundle#begin()
Plugin 'gmarik/Vundle.vim'
Plugin 'bling/vim-airline'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'scrooloose/nerdcommenter'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'ervandew/supertab'
Plugin 'majutsushi/tagbar'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'jlanzarotta/bufexplorer'
Plugin 'rust-lang/rust.vim'
Plugin 'racer-rust/vim-racer'
Plugin 'vim-ruby/vim-ruby'
Plugin 'pangloss/vim-javascript'
Plugin 'artur-shaik/vim-javacomplete2'
Plugin 'ap/vim-css-color'
Plugin 'cespare/vim-toml'
Plugin 'gabrielelana/vim-markdown'
Plugin 'editorconfig/editorconfig-vim'
call vundle#end()

filetype plugin indent on
syntax on

" vim behavior
set title               " change terminal title
set number              " set line numbering
set hidden              " hide buffers instead of closing
set mouse=a             " enable mouse
set scrolloff=5         " keep lines above and below cursor
set autoread            " refresh when file is changed outside
set spelllang=en_us     " set spelling language to English
colorscheme teal

" searching
set hlsearch            " highlight search terms
set incsearch           " show search matches as you type
set ignorecase          " case insensitive search
set smartcase           " case sensitive when uppercase present

" tab settings
set autoindent expandtab
set tabstop=4 shiftwidth=4 softtabstop=4
autocmd filetype ruby,javascript,json,html,css
  \ set tabstop=2 shiftwidth=2 softtabstop=2

" vim 256 colors
if $TERM == 'xterm-256color' || $TERM == 'screen-256color' || $COLORTERM == 'gnome-terminal'
  set t_Co=256
endif

" enable native syntax highlight for markdown with .md extension
autocmd BufNewFile,BufRead *.md set filetype=markdown

" enable ruby autocompletion
autocmd FileType ruby,eruby let g:rubycomplete_buffer_loading = 1
autocmd FileType ruby,eruby let g:rubycomplete_classes_in_global = 1
autocmd FileType ruby,eruby let g:rubycomplete_rails = 1

" enable java autocompletion
autocmd FileType java setlocal omnifunc=javacomplete#Complete

" syntastic
let g:syntastic_auto_loc_list = 1

" vim-airline config
set laststatus=2
let g:airline#extensions#tabline#enabled = 1

if !exists('g:airline_symbols')
  " unicode symbols
  let g:airline_symbols = {}
  let g:airline_left_sep = ''
  let g:airline_right_sep = ''
  let g:airline_symbols.spell = '⚐'
  let g:airline_symbols.paste = 'ρ'
  let g:airline_symbols.branch = '⎇ '
  let g:airline_symbols.linenr = '¶'
  let g:airline_symbols.maxlinenr = ''
  let g:airline_symbols.whitespace = 'Ξ'
endif

" supertab config
let g:SuperTabDefaultCompletionType = 'context'
let g:SuperTabClosePreviewOnPopupClose = 1

" vim-racer config
let g:racer_cmd = 'racer'
let $RUST_SRC_PATH = $HOME . '/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src'

" key mapping leader
let mapleader = '\'

" window navigation
nnoremap <S-h> <C-w>h
nnoremap <S-j> <C-w>j
nnoremap <S-k> <C-w>k
nnoremap <S-l> <C-w>l

" buffer navigation
nmap <C-h> :bprevious<CR>
nmap <C-l> :bnext<CR>

" key mappings
nnoremap j gj
nnoremap k gk

" leader mappings
nnoremap <leader>a ggvG$
nmap <leader>q :quit<CR>
nmap <leader>w :write<CR>
nmap <leader>p :set paste!<CR>
nmap <leader>e :edit <C-r>=expand('%:p:h')<CR>/

" highlight mappings
nmap <leader>hc :nohlsearch<CR>

" split mappings
nmap <leader>sh :split<CR>
nmap <leader>sv :vsplit<CR>

" buffer mappings
nmap <leader>bd :bdelete<CR>
nmap <leader>bf :bfirst<CR>
nmap <leader>bl :blast<CR>

" rust lookup mappings
nmap <leader>rd <Plug>(rust-doc)
nmap <leader>rf <Plug>(rust-def)
nmap <leader>rs <Plug>(rust-def-split)
nmap <leader>rv <Plug>(rust-def-vertical)

" fn mappings
nmap <F2> :BufExplorerHorizontalSplit<CR>
nmap <F3> :NERDTreeToggle<CR>
nmap <F4> :TagbarToggle<CR>
nmap <F5> :edit<CR>
nmap <F8> :set mouse=a<CR>
nmap <F9> :set mouse=''<CR>
nmap <F12> :set spell!<CR>
